name: Docker Image CI

on:
  push:
    branches: [ "test/deploy" ]
  # pull_request:
    # branches: [ "test/deploy" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)

      
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Update JWT Secret in application.properties
      run: sed -i 's/${JWT_SECRET}/${{ secrets.JWT_SECRET }}/' src/main/resources/application.properties

    - name: Update MySQL User in application.properties
      run: sed -i 's/${MYSQL_USER}/${{ secrets.MYSQL_USER }}/' src/main/resources/application.properties

    - name: Update MySQL Password in application.properties
      run: sed -i 's/${MYSQL_ROOT_PASSWORD}/${{ secrets.MYSQL_ROOT_PASSWORD }}/' src/main/resources/application.properties

    - name: Update MAILTRAP_PASSWORD in application.properties
      run: sed -i 's/${MAILTRAP_PASSWORD}/${{ secrets.MAILTRAP_PASSWORD }}/' src/main/resources/application.properties

    - name: Update MAILTRAP_USERNAME in application.properties
      run: sed -i 's/${MAILTRAP_USERNAME}/${{ secrets.MAILTRAP_USERNAME }}/' src/main/resources/application.properties

    - name: Build with Maven
      run: mvn clean package

    - name: Extract version from pom.xml
      id: extract_version
      run: echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: |
           docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:${{ env.VERSION }} .
           docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:${{ env.VERSION }}
