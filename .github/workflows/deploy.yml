name: Deploy Backend

on:
  push:
    branches: [ "develop" ]

jobs:
  build-push-and-deploy:
    runs-on: ubuntu-latest
    services:
      # Crée un conteneur nommé "mysql"
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_DATABASE: testdb
        ports:
          - 3306 # Le port sera mappé à un port aléatoire sur l'hôte
        options: >-
          --health-cmd "mysqladmin ping -h localhost --user=root --password=secret"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Test Application with Service Container
        # On injecte les variables d'environnement pour que les tests se connectent au bon conteneur
        env:
          MYSQL_HOST: 127.0.0.1
          MYSQL_PORT: ${{ job.services.mysql.ports['3306'] }}
          MYSQL_DATABASE_NAME: testdb
          MYSQL_USER: root
          MYSQL_ROOT_PASSWORD: secret
          JWT_SECRET: 047e5e53c908a85c8da4673a41826682166c9a413098634a721fa403a4584450
        run: |
          # On ajoute la permission d'exécution au script Maven Wrapper
          chmod +x ./mvnw
          
          # On lance les tests maintenant que le script est exécutable
          ./mvnw test

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Backend API image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: novaenebulae/tickly-backend:latest

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd ~/tickly-deployment
            docker-compose pull backend
            docker-compose up -d --no-deps backend
            docker image prune -f